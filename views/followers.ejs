<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Followers List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(60deg, #5f85ac,rgb(179, 87, 174), #c48d46);
            font-family: Arial, sans-serif;
        }
        .profile-pic {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
        }
        .container {
            background: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <!-- Search and Sort Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <input type="text" id="search-bar" class="form-control w-50" placeholder="Search followers...">
            <select id="sort-select" class="form-select w-25">
                <option selected value="none">Sort By</option>
                <option value="name">Name</option>
                <option value="time">Time Followed</option>
            </select>
        </div>

        <!-- Followers List -->
        <!-- <div style="margin: 100px;">
            <center>
                <h1>No Followers as of now</h1>
            </center>
        </div> -->
        <div class="accordion accordion-flush" id="followersAccordion">
            <!-- Followers dynamically generated here -->





        </div>
    </div>

    
     <script>
    // Followers data
    const followers = [
        { name: "John Doe", image: "https://via.placeholder.com/50", timeFollowed: "2025-01-05", bio: "Software engineer passionate about scalable web apps." },
        { name: "Jane Smith", image: "https://via.placeholder.com/50", timeFollowed: "2025-01-03", bio: "Graphic designer creating stunning visuals for web and print." },
        { name: "Alice Johnson", image: "https://via.placeholder.com/50", timeFollowed: "2025-01-04", bio: "Marketing expert with a focus on SEO and digital strategies." },
        { name: "Mark Lee", image: "https://via.placeholder.com/50", timeFollowed: "2025-01-02", bio: "Data scientist working with machine learning models." },
    ];

    let followerslist=<%- JSON.stringify(followerslist) %> ;

    const followersAccordion = document.getElementById("followersAccordion");
    const searchBar = document.getElementById("search-bar");
    const sortSelect = document.getElementById("sort-select");

    // Define colors for the cards
    const colors = ["#fce4ec", "#e8f5e9", "#e3f2fd", "#fff3e0", "#ede7f6"];

    // Function to render followers
    function renderFollowers(data) {
        followersAccordion.innerHTML = ""; // Clear previous list
        data.forEach((follower, index) => {
            const accordionItem = document.createElement("div");
            accordionItem.className = "accordion-item";

            // Assign a background color from the array
            const backgroundColor = colors[index % colors.length];

            accordionItem.innerHTML = `
                <h2 class="accordion-header" id="heading${index}">
                    <button class="accordion-button collapsed" type="button" style="background-color: ${backgroundColor};" data-bs-toggle="collapse" data-bs-target="#collapse${index}" aria-expanded="false" aria-controls="collapse${index}">
                        <img src="${followerslist[index].image.url}" alt="Profile Picture" class="profile-pic me-3">
                        ${followerslist[index].username}
                    </button>
                </h2>
                <div id="collapse${index}" class="accordion-collapse collapse" aria-labelledby="heading${index}" data-bs-parent="#followersAccordion">
                    <div class="accordion-body" style="background-color: ${backgroundColor};">
                        <strong>Gender:</strong> ${followerslist[index].gender}<br>
                        <strong>Followers:</strong> ${followerslist[index].followers.length}<br>
                        <strong>Bio:</strong> ${followerslist[index].bio}
                    </div>
                </div>
            `;

            followersAccordion.appendChild(accordionItem);
        });
    }

    // Event: Search
    searchBar.addEventListener("input", () => {
        const query = searchBar.value.toLowerCase();
        const filtered = followerslist.filter(follower => 
            follower.username.toLowerCase().includes(query)
        );
        renderFollowers(filtered);
    });

    // Event: Sort
    sortSelect.addEventListener("change", () => {
        const sortBy = sortSelect.value;
        let sortedFollowers = [...followerslist];

        if (sortBy === "name") {
            sortedFollowers.sort((a, b) => a.username.localeCompare(b.username));
        }
        
        renderFollowers(sortedFollowers);
    });

    // Initial render
    renderFollowers(followerslist);
</script>

    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
